import turtle
from turtle import *

# Constants for map elements
PATH = 0
WALL = 1
RIVER = 2
MATERIALS = 3
KEYS = 4
DOORS = 5
FINISH = 6
BM_count=0
# Create the turtles
t = turtle.Turtle()  # Map draw turtle
t.hideturtle()
p = turtle.Turtle()  # Player move turtle
c = turtle.Turtle()
t.speed(0)  # Set the speed
p.speed(0)
screen= Screen()
screen.setup(750, 950)

# Map data
Map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
    [1, 1, 1, 1, 1, 0, 0, 1, 2, 1, 1, 1],
    [1, 1, 1, 1, 1, 0, 0, 0, 2, 1, 1, 1],
    [1, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1],
    [1, 0, 1, 3, 0, 0, 2, 2, 4, 1, 1, 1],
    [1, 0, 1, 1, 1, 0, 3, 1, 1, 1, 1, 1],
    [1, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1],
    [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1],
    [1, 4, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1],
    [1, 0, 3, 1, 1, 0, 1, 1, 1, 1, 1, 1],
    [1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
    [1, 3, 1, 1, 1, 0, 3, 0, 4, 0, 1, 1],
    [1, 0, 5, 1, 0, 0, 1, 1, 1, 2, 1, 1],
    [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 3, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
]

# Start position of the turtles
x_start = -150
y_start = 150
box_size = 30

# Setup initial position for player
player_start_x = 5
player_start_y = 15

#Write the controls
def controls(t):
    screen.tracer(0)
    t.penup()
    t.goto(-150, 180)
    t.pendown()
    t.write("Move with arrow keys, press 'q' to quit", move=False, align='left', font=('Arial', 20, "normal"))
    t.hideturtle()
    screen.update()
    screen.tracer(1)
    
#Formula to used allow the turtle navigate the map while following the text layout
def map_to_screen(x, y):
    return x_start + x * box_size +13, y_start - y * box_size - 13 

# Setup player's turtle
p.penup()
p.shape("turtle")
player_x, player_y = map_to_screen(player_start_x, player_start_y)
p.goto(player_x, player_y)

# Initialize variables
Mats = 0
Keys = 0


def drawMap(currX, currY):
    print()
    for y in range(0, len(Map)):
        for x in range(0, len(Map[y])):
            # Show numbers as symbols
            if currX == x and currY == y:
                print("*  ", end="")
            elif Map[y][x] == RIVER:  # River tile
                print("~  ", end="")
            elif Map[y][x] == MATERIALS:  # Item
                print("?  ", end="")  # '?' means item
            elif Map[y][x] == KEYS:
                print("?  ", end="")  # Key
            elif Map[y][x] == PATH:
                print("   ", end="")  # path
            elif Map[y][x] == DOORS:
                print("D  ", end="")  # Door
            elif Map[y][x] == FINISH:
                print("F  ", end="")  # End
            else:
                print(Map[y][x], " ", end="")
        print()
    print()

# Define our function that will move the player
def movePlayer(x, y, moveDir):
    global Map, Mats, Keys
    # Calculate the new coordinates based on the move direction
    new_x = x
    new_y = y
    if moveDir == "u":
        new_y = new_y - 1
    elif moveDir == "d":
        new_y = new_y + 1
    elif moveDir == "l":
        new_x = new_x - 1
    elif moveDir == "r":
        new_x = new_x + 1
    # Check if the new coordinates are within bounds and not a wall
    if 0 <= new_x < len(Map[0]) and 0 <= new_y < len(Map) and Map[new_y][new_x] != 1 and Map[new_y][new_x] != 2 and Map[new_y][new_x] != 5:
        return (new_x, new_y)
    elif Map[new_y][new_x] == RIVER:
        if Mats >= 1:
            Buildit = turtle.textinput("River!","This river is too dangerous to cross...Would you like to use your building materials? (y/n): ")
            if Buildit.lower() == 'y':
                Map[new_y][new_x] = 0
                Mats -= 1
                print("You have", Mats, "building materials left")
                print(" ")
                t.clear()
                draw_map(Map, x_start, y_start, box_size)
                listen()
                return (new_x, new_y)
                
            else:
                print("You've decided to keep your building materials...")
                print(" ")
                listen()
                return (x, y)
        else:
            print("This river is too dangerous to swim across. If only we had something to build over it with...")
            print(" ")
            return (x, y)
    elif Map[new_y][new_x] == DOORS:
        if Keys >= 1:
            Unlock = turtle.textinput("Did you just walk face first into a door", "Unlock it? (y/n): ")
            if Unlock.lower() == 'y':
                Map[new_y][new_x] = 0
                Keys= Keys - 1
                print("You unlocked the door! You have", Keys, "keys left.")
                print(" ")
                t.clear()
                draw_map(Map, x_start, y_start, box_size)
                listen()
                return (new_x, new_y)
            else:
                print("You chose not to unlock this door")
                print(" ")
                listen
                return (x, y)
        else:
            print("Did you just walk face first into a door? Nevermind...I'll pretend I didn't see that")
            print(" ")
            return (x, y)
    else:
        print("**Invalid move** Try again.")
        print(" ")
        return (x, y)



#END OF GAME
def GAME_END(x,y):
    if Map[y][x]==6:
        print( "You Win!!!") #check if player wins
        quit()

        
# Set our starting location
currX = 5
currY = 8

# draw the map the first time before asking for a move
drawMap(currX, currY)

# Forever just let the player move around the map on the path
while True:
    moveDir = input("Enter direction (u,d,l,r): ")
    currX, currY = movePlayer(currX, currY, moveDir)
    item_grab(currX, currY)
    drawMap(currX, currY)
    GAME_END(currX, currY)
