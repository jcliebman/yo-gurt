import pygame
import sys
import random
import time

pygame.init()

# Constants
WIDTH, HEIGHT = 800, 600
WHITE = (255, 255, 255)
GRAY = (100, 100, 100)
BLACK = (0, 0, 0)
PADDLE_WIDTH, PADDLE_HEIGHT = 15, 100
BALL_SIZE = 20
FPS = 60
FONT = pygame.font.SysFont("Arial", 15)

# Screen
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pong with Different Modes and Power-ups!")

# Entities
player = pygame.Rect(WIDTH - 30, HEIGHT // 2 - PADDLE_HEIGHT // 2, PADDLE_WIDTH, PADDLE_HEIGHT)
opponent = pygame.Rect(15, HEIGHT // 2 - PADDLE_HEIGHT // 2, PADDLE_WIDTH, PADDLE_HEIGHT)
ball = pygame.Rect(WIDTH // 2, HEIGHT // 2, BALL_SIZE, BALL_SIZE)

# Movement
ball_speed_map = {"Easy": 6, "Medium": 8, "Hard": 11}
ball_speed_x = 8
ball_speed_y = 8
player_speed = 0
opponent_speed = 7
player_super_speed = 10
opponent_super_speed = 7

# Score
player_score = 0
opponent_score = 0

# AI settings
ai_error_chance = {"Easy": 0.5, "Medium": 0.25, "Hard": 0.05}
difficulty = "Medium"
ai_enabled = True

# Freeze timers
player_frozen = False
player_frozen_end = 0
opponent_frozen = False
opponent_frozen_end = 0


# Ball stop timer
ball_stopped = False
ball_stop_timer = 0

# Power-up linked list classes
class PowerUpNode:
    def __init__(self, powerup):
        self.powerup = powerup
        self.next = None

class PowerUpList:
    def __init__(self):
        self.head = None

    def add_powerup(self, powerup):
        new_node = PowerUpNode(powerup)
        if not self.head:
            self.head = new_node
        else:
            current = self.head
            while current.next:
                current = current.next
            current.next = new_node

    def pop_first(self):
        if not self.head:
            return None
        powerup = self.head.powerup
        self.head = self.head.next
        return powerup

    def is_empty(self):
        return self.head is None

    def __str__(self):
        result = []
        current = self.head
        while current:
            result.append(current.powerup)
            current = current.next
        return " -> ".join(result) if result else "None"

# Power-ups (linked lists)
player_powerups = PowerUpList()
opponent_powerups = PowerUpList()

# Clock
clock = pygame.time.Clock()

def menu_loop(options):
    index = 0
    while True:
        screen.fill(BLACK)
        title = FONT.render("Select Option:", True, WHITE)
        screen.blit(title, (WIDTH // 2 - title.get_width() // 2, 100))

        for i, option in enumerate(options): 
            color = WHITE if i == index else GRAY
            text = FONT.render(option, True, color)
            screen.blit(text, (WIDTH // 2 - text.get_width() // 2, 200 + i * 50))

        pygame.display.flip()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP:
                    index = (index - 1) % len(options)
                elif event.key == pygame.K_DOWN:
                    index = (index + 1) % len(options)
                elif event.key == pygame.K_RETURN:
                    return options[index]
